{"ast":null,"code":"// Generic function to fetch records from a specific table\n// src/services/Airtable.js\n\n// Point to your proxy server running on localhost:5000\nconst baseUrl = 'http://localhost:5000/api'; // Proxy server URL\n\n// Function to fetch data via proxy server (no headers needed)\nconst fetchRecords = async endpoint => {\n  try {\n    const response = await fetch(`${baseUrl}/${endpoint}`);\n    if (!response.ok) {\n      throw new Error(`Error: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data.records;\n  } catch (error) {\n    console.error(`Error fetching data from ${endpoint}:`, error);\n    return [];\n  }\n};\nexport const getHeaders = async () => {\n  return fetchRecords('Headers'); // Make request to proxy\n};\nexport const getMeetings = async () => {\n  return fetchRecords('Meetings'); // Request to proxy\n};\nexport const getMembers = async () => {\n  return fetchRecords('Members'); // Request to proxy\n};\nexport const getPastCars = async () => {\n  return fetchRecords('PastCars'); // Request to proxy\n};\nexport const getSponsors = async () => {\n  return fetchRecords('Sponsors'); // Request to proxy\n};\nexport const getPageContent = async page => {\n  try {\n    const response = await fetch(`${baseUrl}/Pages?filterByFormula={Page}=\"${page}\"`);\n    if (!response.ok) {\n      throw new Error(`Error: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data.records.length ? data.records[0].fields : null;\n  } catch (error) {\n    console.error(`Error fetching page content:`, error);\n    return null;\n  }\n};","map":{"version":3,"names":["baseUrl","fetchRecords","endpoint","response","fetch","ok","Error","statusText","data","json","records","error","console","getHeaders","getMeetings","getMembers","getPastCars","getSponsors","getPageContent","page","length","fields"],"sources":["D:/Programming_Folder/Team_Website/team-website-redone/client/src/services/Airtable.js"],"sourcesContent":["// Generic function to fetch records from a specific table\r\n// src/services/Airtable.js\r\n\r\n// Point to your proxy server running on localhost:5000\r\nconst baseUrl = 'http://localhost:5000/api';  // Proxy server URL\r\n\r\n// Function to fetch data via proxy server (no headers needed)\r\nconst fetchRecords = async (endpoint) => {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/${endpoint}`);\r\n    if (!response.ok) {\r\n      throw new Error(`Error: ${response.statusText}`);\r\n    }\r\n    const data = await response.json();\r\n    return data.records;\r\n  } catch (error) {\r\n    console.error(`Error fetching data from ${endpoint}:`, error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getHeaders = async () => {\r\n  return fetchRecords('Headers');  // Make request to proxy\r\n};\r\n\r\nexport const getMeetings = async () => {\r\n  return fetchRecords('Meetings');  // Request to proxy\r\n};\r\n\r\nexport const getMembers = async () => {\r\n  return fetchRecords('Members');  // Request to proxy\r\n};\r\n\r\nexport const getPastCars = async () => {\r\n  return fetchRecords('PastCars');  // Request to proxy\r\n};\r\n\r\nexport const getSponsors = async () => {\r\n  return fetchRecords('Sponsors');  // Request to proxy\r\n};\r\n\r\nexport const getPageContent = async (page) => {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/Pages?filterByFormula={Page}=\"${page}\"`);\r\n    if (!response.ok) {\r\n      throw new Error(`Error: ${response.statusText}`);\r\n    }\r\n    const data = await response.json();\r\n    return data.records.length ? data.records[0].fields : null;\r\n  } catch (error) {\r\n    console.error(`Error fetching page content:`, error);\r\n    return null;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA,MAAMA,OAAO,GAAG,2BAA2B,CAAC,CAAE;;AAE9C;AACA,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,IAAIE,QAAQ,EAAE,CAAC;IACtD,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,UAAUH,QAAQ,CAACI,UAAU,EAAE,CAAC;IAClD;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,OAAO;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4BT,QAAQ,GAAG,EAAES,KAAK,CAAC;IAC7D,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,OAAOZ,YAAY,CAAC,SAAS,CAAC,CAAC,CAAE;AACnC,CAAC;AAED,OAAO,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,OAAOb,YAAY,CAAC,UAAU,CAAC,CAAC,CAAE;AACpC,CAAC;AAED,OAAO,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,OAAOd,YAAY,CAAC,SAAS,CAAC,CAAC,CAAE;AACnC,CAAC;AAED,OAAO,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,OAAOf,YAAY,CAAC,UAAU,CAAC,CAAC,CAAE;AACpC,CAAC;AAED,OAAO,MAAMgB,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,OAAOhB,YAAY,CAAC,UAAU,CAAC,CAAC,CAAE;AACpC,CAAC;AAED,OAAO,MAAMiB,cAAc,GAAG,MAAOC,IAAI,IAAK;EAC5C,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,kCAAkCmB,IAAI,GAAG,CAAC;IACjF,IAAI,CAAChB,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,UAAUH,QAAQ,CAACI,UAAU,EAAE,CAAC;IAClD;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,OAAO,CAACU,MAAM,GAAGZ,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACW,MAAM,GAAG,IAAI;EAC5D,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}