{"ast":null,"code":"// Generic function to fetch records from a specific table\n// src/services/Airtable.js\n\n// Point to your proxy server running on localhost:5000\nconst baseUrl = 'http://localhost:5000/api'; // Proxy server URL\n\n// Function to fetch data via proxy server (no headers needed)\nconst fetchRecords = async endpoint => {\n  try {\n    const response = await fetch(`${baseUrl}/${endpoint}`);\n    if (!response.ok) {\n      throw new Error(`Error: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data.records;\n  } catch (error) {\n    console.error(`Error fetching data from ${endpoint}:`, error);\n    return [];\n  }\n};\n\n// Function to fetch headers including Logo, Image Title, Info, etc.\nexport const getHeaders = async () => {\n  const records = await fetchRecords('Headers');\n  return records.map(record => ({\n    id: record.id,\n    page: record.fields['fldmVY0nJ8uemBI6F'] || 'No page data',\n    // Page Field\n    logo: record.fields['flddXZCUheoWC4n60'] ? extractImageInfo(record.fields['flddXZCUheoWC4n60']) : null,\n    // Logo Field\n    imageTitle: record.fields['fldMWd3kaaUa2ZPP8'] || 'No image title',\n    // Image Title Field\n    infoTitle: record.fields['fldfR5LEQ4Bd50JnC'] || 'No info title',\n    // Info Title Field\n    info: record.fields['flddM7U8Fo87xCGkX'] || 'No info' // Info Field\n  }));\n};\n\n// Helper function to extract image attachment information\nconst extractImageInfo = attachments => {\n  return attachments.map(attachment => {\n    var _attachment$thumbnail, _attachment$thumbnail2, _attachment$thumbnail3, _attachment$thumbnail4;\n    return {\n      id: attachment.id,\n      url: attachment.url,\n      // Main image URL\n      filename: attachment.filename,\n      size: attachment.size,\n      type: attachment.type,\n      width: attachment.width,\n      height: attachment.height,\n      thumbnails: {\n        small: ((_attachment$thumbnail = attachment.thumbnails) === null || _attachment$thumbnail === void 0 ? void 0 : (_attachment$thumbnail2 = _attachment$thumbnail.small) === null || _attachment$thumbnail2 === void 0 ? void 0 : _attachment$thumbnail2.url) || null,\n        large: ((_attachment$thumbnail3 = attachment.thumbnails) === null || _attachment$thumbnail3 === void 0 ? void 0 : (_attachment$thumbnail4 = _attachment$thumbnail3.large) === null || _attachment$thumbnail4 === void 0 ? void 0 : _attachment$thumbnail4.url) || null\n      }\n    };\n  });\n};\nexport const getPageContent = async page => {\n  try {\n    const response = await fetch(`${baseUrl}/Pages?filterByFormula={Page}=\"${page}\"`);\n    if (!response.ok) {\n      throw new Error(`Error: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data.records.length ? data.records[0].fields : null;\n  } catch (error) {\n    console.error(`Error fetching page content:`, error);\n    return null;\n  }\n};","map":{"version":3,"names":["baseUrl","fetchRecords","endpoint","response","fetch","ok","Error","statusText","data","json","records","error","console","getHeaders","map","record","id","page","fields","logo","extractImageInfo","imageTitle","infoTitle","info","attachments","attachment","_attachment$thumbnail","_attachment$thumbnail2","_attachment$thumbnail3","_attachment$thumbnail4","url","filename","size","type","width","height","thumbnails","small","large","getPageContent","length"],"sources":["D:/Programming_Folder/Team_Website/team-website-redone/client/src/services/Airtable.js"],"sourcesContent":["// Generic function to fetch records from a specific table\r\n// src/services/Airtable.js\r\n\r\n// Point to your proxy server running on localhost:5000\r\nconst baseUrl = 'http://localhost:5000/api';  // Proxy server URL\r\n\r\n// Function to fetch data via proxy server (no headers needed)\r\nconst fetchRecords = async (endpoint) => {\r\n    try {\r\n      const response = await fetch(`${baseUrl}/${endpoint}`);\r\n      if (!response.ok) {\r\n        throw new Error(`Error: ${response.statusText}`);\r\n      }\r\n      const data = await response.json();\r\n      return data.records;\r\n    } catch (error) {\r\n      console.error(`Error fetching data from ${endpoint}:`, error);\r\n      return [];\r\n    }\r\n  };\r\n  \r\n  // Function to fetch headers including Logo, Image Title, Info, etc.\r\n  export const getHeaders = async () => {\r\n    const records = await fetchRecords('Headers');\r\n    return records.map(record => ({\r\n      id: record.id,\r\n      page: record.fields['fldmVY0nJ8uemBI6F'] || 'No page data',  // Page Field\r\n      logo: record.fields['flddXZCUheoWC4n60'] \r\n        ? extractImageInfo(record.fields['flddXZCUheoWC4n60'])\r\n        : null,  // Logo Field\r\n      imageTitle: record.fields['fldMWd3kaaUa2ZPP8'] || 'No image title',  // Image Title Field\r\n      infoTitle: record.fields['fldfR5LEQ4Bd50JnC'] || 'No info title',  // Info Title Field\r\n      info: record.fields['flddM7U8Fo87xCGkX'] || 'No info',  // Info Field\r\n    }));\r\n  };\r\n  \r\n  // Helper function to extract image attachment information\r\n  const extractImageInfo = (attachments) => {\r\n    return attachments.map(attachment => ({\r\n      id: attachment.id,\r\n      url: attachment.url,  // Main image URL\r\n      filename: attachment.filename,\r\n      size: attachment.size,\r\n      type: attachment.type,\r\n      width: attachment.width,\r\n      height: attachment.height,\r\n      thumbnails: {\r\n        small: attachment.thumbnails?.small?.url || null,\r\n        large: attachment.thumbnails?.large?.url || null,\r\n      },\r\n    }));\r\n  };\r\n  \r\n\r\nexport const getPageContent = async (page) => {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/Pages?filterByFormula={Page}=\"${page}\"`);\r\n    if (!response.ok) {\r\n      throw new Error(`Error: ${response.statusText}`);\r\n    }\r\n    const data = await response.json();\r\n    return data.records.length ? data.records[0].fields : null;\r\n  } catch (error) {\r\n    console.error(`Error fetching page content:`, error);\r\n    return null;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}